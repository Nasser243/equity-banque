Banque Equity if ('serviceWorker' in navigator) { window.addEventListener('load', () => { navigator.serviceWorker.register('service-worker.js') .then(reg => console.log('Service Worker enregistré !')) .catch(err => console.error('Erreur SW :', err)); }); } body { font-family: 'Segoe UI', sans-serif; background: #0f2027; color: #fff; display: flex; justify-content: center; padding: 30px; } .container { background-color: #1a1a1a; padding: 30px; border-radius: 20px; width: 100%; max-width: 400px; box-shadow: 0 0 25px rgba(0, 255, 198, 0.1); } h1 { text-align: center; color: #00ffc6; } input, button, select { width: 100%; padding: 12px; margin-top: 10px; border: none; border-radius: 10px; font-size: 1em; } input, select { background-color: #2b2b2b; color: #fff; } button { background-color: #00ffc6; color: #000; cursor: pointer; font-weight: bold; } .solde { font-size: 1.2em; text-align: center; background: #222; padding: 15px; border-radius: 10px; margin-top: 15px; } .historique ul { list-style: none; padding: 0; margin: 0; max-height: 200px; overflow-y: auto; } .historique li { background: #2a2a2a; padding: 10px; margin-bottom: 8px; border-radius: 8px; display: flex; justify-content: space-between; } .plus { color: #3aff85; } .moins { color: #ff4c4c; } .facture-btn { background: transparent; color: #00ffc6; border: 1px solid #00ffc6; padding: 4px 8px; font-size: 0.75em; border-radius: 6px; cursor: pointer; } 
Banque Equity
Euro (€)Dollar ($) Déposer Retirer 
Solde : 0.00 € 
Historique : 
const soldeEl = document.getElementById("solde"); const deviseEl = document.getElementById("devise"); const historiqueEl = document.getElementById("historique"); let solde = 0; let historique = []; <pre><code>function getSymbole() { return deviseEl.value === 'USD' ? '$' : '€'; } function majUI() { soldeEl.textContent = `${solde.toFixed(2)} ${getSymbole()}`; historiqueEl.innerHTML = ''; historique.forEach((entry, index) =&gt; { const li = document.createElement('li'); li.innerHTML = ` &lt;span class=&quot;${entry.type === 'depot' ? 'plus' : 'moins'}&quot;&gt;${entry.texte}&lt;/span&gt; &lt;button class=&quot;facture-btn&quot; onclick=&quot;genererFacture(${index})&quot;&gt;Facture&lt;/button&gt; `; historiqueEl.prepend(li); }); } function deposer() { const montant = parseFloat(document.getElementById(&quot;montant&quot;).value); if (montant &gt; 0) { solde += montant; ajouterTransaction(&quot;Dépôt&quot;, montant, &quot;depot&quot;); document.getElementById(&quot;montant&quot;).value = ''; } } function retirer() { const montant = parseFloat(document.getElementById(&quot;montant&quot;).value); if (montant &gt; 0 &amp;&amp; montant &lt;= solde) { solde -= montant; ajouterTransaction(&quot;Retrait&quot;, montant, &quot;retrait&quot;); document.getElementById(&quot;montant&quot;).value = ''; } else { alert(&quot;Montant invalide ou insuffisant&quot;); } } function ajouterTransaction(type, montant, code) { const now = new Date(); const data = { texte: `${type} de ${montant.toFixed(2)} ${getSymbole()}`, montant, devise: getSymbole(), type: code, date: now.toLocaleString(), id: Date.now() }; historique.push(data); majUI(); } function genererFacture(index) { const { jsPDF } = window.jspdf; const entry = historique[index]; const doc = new jsPDF(); doc.setFontSize(18); doc.text(&quot;Banque Equity&quot;, 10, 20); doc.setFontSize(14); doc.text(`Facture N°: ${entry.id}`, 10, 30); doc.text(`Date : ${entry.date}`, 10, 40); doc.text(`Client : admin`, 10, 50); doc.text(`Type : ${entry.type === &quot;depot&quot; ? &quot;Dépôt&quot; : &quot;Retrait&quot;}`, 10, 60); doc.text(`Montant : ${entry.montant.toFixed(2)} ${entry.devise}`, 10, 70); doc.text(&quot;Signature : ____________________&quot;, 10, 90); doc.save(`facture_${entry.id}.pdf`); } </code></pre>